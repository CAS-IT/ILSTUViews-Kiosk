package {
	import com.kitschpatrol.futil.Math2;
	import com.kitschpatrol.futil.easing.EaseMap;
	
	import flash.display.Sprite;
	
	
	
	public class QuotationRow extends Sprite {
		
		// TODO Move the data
		

		private var _step:Number;

		// where the in / out points are in the graph
		private var graphMidStart:Number = 0.2;
		private var graphMidEnd:Number = 0.8;
		
		// how long they last as a percentage of the animation
		private var inDuration:Number = 0.4;
		private var outDuration:Number = 0.4;		
		
		
		public function QuotationRow() {
			super();
			step = 0; 
		}
		
		
		public function get step():Number { return _step; }
		public function set step(n:Number):void {
			_step = n;
			
//			if (n == 0) {
//				// init
//				this.x = -this.width;
//			}
//			else if (n == 1) {
//				// end 
//				this.x = 5720;
//			}			
//			else if (n <= inDuration) {
//				// lerp in
//				//var introPosition:Number = Math2.map(n, 0, inDuration, 0, graphMidStart); // allows time control over intro and outro
//				//this.x = Math2.map(vectorLerp(introPosition, map), 0, graphMidStart, -this.width, -this.width + 5720); // TODO pass in total width
//				
//				var introPosition:Number = Math2.map(n, 0, inDuration, 0, graphMidStart); // allows time control over intro and outro
//				this.x = Math2.map(vectorLerp(introPosition, map), 0, 1, -this.width, 5720); // TODO pass in total width				
//			}
//			else if (n >= (1 - outDuration)) {
//				// lerp out
//				//var outroPosition:Number = Math2.map(n, 1 - outDuration, 1, graphMidEnd, 1); // allows time control over intro and outro
//				//this.x = Math2.map(vectorLerp(outroPosition, map), graphMidEnd, 1, 0, 5720); // TODO pass in total width
//				
//				var outroPosition:Number = Math2.map(n, 1 - outDuration, 1, graphMidEnd, 1); // allows time control over intro and outro
//				this.x = Math2.map(vectorLerp(outroPosition, map), 0, 1, -this.width, 5720); // TODO pass in total width				
//			}
//			else {
//				// middle
//				var middlePosition:Number = Math2.map(n, inDuration, 1 - outDuration, graphMidStart, graphMidEnd);
//				this.x = Math2.map(vectorLerp(middlePosition, map), 0, 1, -this.width, 5720); // TODO pass in total width				
//				//this.x = Math2.map(n, inDuration, 1 - outDuration, -this.width + 5720, 0); // TODO pass in total width				
//			}

			
			if (n == 0) {
				// init
				this.x = -this.width;
			}
			else if (n == 1) {
				// end 
				this.x = 5720;
			}
			else {
				// middle
				this.x = Math2.map(vectorLerp(n, map), 0, 1, -this.width, 5720); // TODO pass in total width				
			}			
	
			
		}
		
		private function vectorLerp(normalIndex:Number, vector:Vector.<Number>):Number {
			var realIndex:Number = Math2.mapClamp(normalIndex, 0, 1, 0, vector.length - 1); // decimal index
			var lowIndex:int = int(realIndex);
			var highIndex:int = Math.min(lowIndex + 1, vector.length - 1);
			return Math2.map(realIndex - lowIndex, 0, 1, vector[lowIndex], vector[highIndex]);
		}
		
		// Generated from image, TODO port generator to python and pad the numbers
		private var map:Vector.<Number> = new <Number>[0.0, 0.006103754, 0.01322484, 0.018311322, 0.022380471, 0.027466953, 0.031536102, 0.03560531, 0.03967446, 0.04374367, 
				0.046795547, 0.050864697, 0.053916574, 0.05696845, 0.060020328, 0.063072205, 0.06612408, 0.068158686, 0.07121056, 0.07426244, 
				0.076297045, 0.07934892, 0.08138353, 0.0844354, 0.08647001, 0.08850455, 0.09155649, 0.093591034, 0.09562564, 0.09766024, 
				0.09969479, 0.102746665, 0.103764, 0.1057986, 0.10885048, 0.10986775, 0.11291963, 0.1139369, 0.115971506, 0.11800611, 
				0.120040715, 0.12207526, 0.12309259, 0.12512714, 0.12716174, 0.12919635, 0.13021362, 0.13224822, 0.13428283, 0.13631737, 
				0.1373347, 0.13936925, 0.14038658, 0.14242119, 0.14343846, 0.14547306, 0.14750761, 0.14852494, 0.15055948, 0.15157682, 
				0.15361142, 0.1546287, 0.15564597, 0.15768057, 0.15869784, 0.16073245, 0.16174972, 0.16378433, 0.16480166, 0.16581893, 
				0.16785353, 0.1688708, 0.16988808, 0.17192268, 0.17293996, 0.17395729, 0.17599183, 0.17700917, 0.17802644, 0.17904377, 
				0.18107831, 0.18209565, 0.18311292, 0.18413019, 0.1861648, 0.18718207, 0.1881994, 0.18921667, 0.190234, 0.19125128, 
				0.19328588, 0.19430315, 0.19532043, 0.19633776, 0.19735503, 0.1983723, 0.19938964, 0.20142424, 0.20244151, 0.20345879, 
				0.20447612, 0.20549339, 0.20651066, 0.207528, 0.20854527, 0.20956254, 0.21057987, 0.21159714, 0.21261442, 0.21363175, 
				0.21464902, 0.21566635, 0.21668363, 0.2177009, 0.21871823, 0.2197355, 0.22075278, 0.22177011, 0.22278738, 0.22380465, 
				0.22482198, 0.22583926, 0.22685659, 0.22787386, 0.22889113, 0.22990847, 0.23092574, 0.23194301, 0.23296034, 0.23397762, 
				0.23499489, 0.23601222, 0.23601222, 0.2370295, 0.23804682, 0.2390641, 0.24008137, 0.2410987, 0.24211597, 0.24313325, 
				0.24313325, 0.24415058, 0.24516785, 0.24618512, 0.24720246, 0.24821973, 0.249237, 0.249237, 0.25025433, 0.2512716, 
				0.25228894, 0.2533062, 0.2533062, 0.25432348, 0.2553408, 0.2563581, 0.25737536, 0.25737536, 0.2583927, 0.25940996, 
				0.26042724, 0.26144457, 0.26144457, 0.26246184, 0.26347917, 0.26449645, 0.26449645, 0.26551372, 0.26653105, 0.26754832, 
				0.26754832, 0.2685656, 0.26958293, 0.2706002, 0.2706002, 0.27161747, 0.2726348, 0.27365208, 0.27365208, 0.2746694, 
				0.27568668, 0.27568668, 0.27670395, 0.2777213, 0.2777213, 0.27873856, 0.27975583, 0.28077316, 0.28077316, 0.28179044, 
				0.2828077, 0.2828077, 0.28382504, 0.2848423, 0.2848423, 0.28585958, 0.28687692, 0.28687692, 0.2878942, 0.28891152, 
				0.28891152, 0.2899288, 0.29094607, 0.29094607, 0.2919634, 0.29298067, 0.29298067, 0.29399794, 0.29501528, 0.29501528, 
				0.29603255, 0.29704982, 0.29704982, 0.29806715, 0.29908442, 0.29908442, 0.30010176, 0.30111903, 0.30111903, 0.3021363, 
				0.30315363, 0.30315363, 0.3041709, 0.30518818, 0.30518818, 0.3062055, 0.30722278, 0.30722278, 0.30824006, 0.3092574, 
				0.3092574, 0.31027466, 0.311292, 0.311292, 0.31230927, 0.31332654, 0.31332654, 0.31434387, 0.31536114, 0.31536114, 
				0.3163784, 0.31739575, 0.31739575, 0.31841302, 0.3194303, 0.3194303, 0.32044762, 0.3214649, 0.3214649, 0.32248217, 
				0.3234995, 0.3234995, 0.32451677, 0.3255341, 0.3255341, 0.32655138, 0.32756865, 0.32756865, 0.32858598, 0.32960325, 
				0.32960325, 0.33062053, 0.33163786, 0.33163786, 0.33265513, 0.3336724, 0.3336724, 0.33468974, 0.335707, 0.335707, 
				0.33672434, 0.3377416, 0.3377416, 0.3387589, 0.33977622, 0.33977622, 0.3407935, 0.34181076, 0.34181076, 0.3428281, 
				0.34384537, 0.34384537, 0.34486264, 0.34587997, 0.34587997, 0.34689724, 0.34791458, 0.34791458, 0.34893185, 0.34994912, 
				0.34994912, 0.35096645, 0.35198373, 0.35198373, 0.353001, 0.35401833, 0.35401833, 0.3550356, 0.35605288, 0.35605288, 
				0.3570702, 0.35808748, 0.35808748, 0.35910475, 0.36012208, 0.36012208, 0.36113936, 0.3621567, 0.3621567, 0.36317396, 
				0.36419123, 0.36419123, 0.36520857, 0.36622584, 0.36622584, 0.3672431, 0.36826044, 0.36826044, 0.36927772, 0.370295, 
				0.370295, 0.37131232, 0.3723296, 0.3723296, 0.37334692, 0.3743642, 0.3743642, 0.37538147, 0.3763988, 0.3763988, 
				0.37741607, 0.37843335, 0.37843335, 0.37945068, 0.38046795, 0.38046795, 0.38148522, 0.38250256, 0.38250256, 0.38351983, 
				0.38453716, 0.38453716, 0.38555443, 0.3865717, 0.3865717, 0.38758904, 0.3886063, 0.3886063, 0.38962358, 0.3906409, 
				0.3906409, 0.3916582, 0.39267546, 0.39267546, 0.3936928, 0.39471006, 0.39471006, 0.39572734, 0.39674467, 0.39674467, 
				0.39776194, 0.39877927, 0.39877927, 0.39979655, 0.40081382, 0.40081382, 0.40183115, 0.40284842, 0.40284842, 0.4038657, 
				0.40488303, 0.40488303, 0.4059003, 0.40691757, 0.40691757, 0.4079349, 0.40895218, 0.40895218, 0.4099695, 0.41098678, 
				0.41098678, 0.41200405, 0.4130214, 0.4130214, 0.41403866, 0.41505593, 0.41505593, 0.41607326, 0.41709054, 0.41709054, 
				0.4181078, 0.41912514, 0.41912514, 0.4201424, 0.42115974, 0.42115974, 0.42217702, 0.4231943, 0.4231943, 0.42421162, 
				0.4252289, 0.4252289, 0.42624617, 0.4272635, 0.4272635, 0.42828077, 0.42929804, 0.42929804, 0.43031538, 0.43133265, 
				0.43133265, 0.43234992, 0.43336725, 0.43336725, 0.43438452, 0.43540186, 0.43540186, 0.43641913, 0.4374364, 0.4374364, 
				0.43845373, 0.439471, 0.439471, 0.44048828, 0.4415056, 0.4415056, 0.44252288, 0.44354016, 0.44354016, 0.4445575, 
				0.44557476, 0.44557476, 0.4465921, 0.44760936, 0.44760936, 0.44862664, 0.44964397, 0.44964397, 0.45066124, 0.4516785, 
				0.4516785, 0.45269585, 0.45371312, 0.45371312, 0.4547304, 0.45574772, 0.45574772, 0.456765, 0.45778233, 0.45778233, 
				0.4587996, 0.45981687, 0.45981687, 0.4608342, 0.46185148, 0.46185148, 0.46286875, 0.46388608, 0.46388608, 0.46490335, 
				0.46592063, 0.46592063, 0.46693796, 0.46795523, 0.46795523, 0.4689725, 0.46998984, 0.46998984, 0.4710071, 0.47202444, 
				0.47202444, 0.4730417, 0.474059, 0.474059, 0.47507632, 0.4760936, 0.4760936, 0.47711086, 0.4781282, 0.4781282, 
				0.47914547, 0.48016274, 0.48016274, 0.48118007, 0.48219734, 0.48219734, 0.48321468, 0.48423195, 0.48423195, 0.48524922, 
				0.48626655, 0.48626655, 0.48728383, 0.4883011, 0.4883011, 0.48931843, 0.4903357, 0.4903357, 0.49135298, 0.4923703, 
				0.4923703, 0.49338758, 0.4944049, 0.4944049, 0.49542218, 0.49643946, 0.49643946, 0.4974568, 0.49847406, 0.49847406, 
				0.49949133, 0.50050867, 0.50050867, 0.50152594, 0.5025432, 0.5025432, 0.50356054, 0.5045778, 0.5045778, 0.5055951, 
				0.5066124, 0.5066124, 0.5076297, 0.50864697, 0.50864697, 0.5096643, 0.5106816, 0.5106816, 0.51169884, 0.5127162, 
				0.5127162, 0.5137335, 0.5147507, 0.5147507, 0.51576805, 0.5167854, 0.5167854, 0.51780266, 0.5188199, 0.5188199, 
				0.51983726, 0.52085453, 0.52085453, 0.5218718, 0.52288914, 0.52288914, 0.5239064, 0.5249237, 0.5249237, 0.525941, 
				0.5269583, 0.5269583, 0.52797556, 0.5289929, 0.5289929, 0.53001016, 0.53102744, 0.53102744, 0.53204477, 0.53306204, 
				0.53306204, 0.5340793, 0.53509665, 0.53509665, 0.536114, 0.5371312, 0.5371312, 0.5381485, 0.53916585, 0.53916585, 
				0.5401831, 0.5412004, 0.5412004, 0.54221773, 0.543235, 0.543235, 0.5442523, 0.5452696, 0.5452696, 0.5462869, 
				0.54730415, 0.54730415, 0.5483215, 0.54933876, 0.54933876, 0.55035603, 0.55137336, 0.55137336, 0.55239064, 0.5534079, 
				0.5534079, 0.55442524, 0.5554425, 0.5554425, 0.5564598, 0.5574771, 0.5574771, 0.55849445, 0.55951166, 0.55951166, 
				0.560529, 0.5615463, 0.5615463, 0.56256354, 0.5635809, 0.5635809, 0.5645982, 0.5656155, 0.5656155, 0.56663275, 
				0.5676501, 0.5676501, 0.56866735, 0.5696846, 0.5696846, 0.57070196, 0.5717192, 0.5717192, 0.5727365, 0.57375383, 
				0.57375383, 0.5747711, 0.5757884, 0.5757884, 0.5768057, 0.577823, 0.577823, 0.57884026, 0.5798576, 0.5798576, 
				0.58087486, 0.58189213, 0.58189213, 0.58290946, 0.5839268, 0.5839268, 0.584944, 0.58596134, 0.58596134, 0.5869787, 
				0.5879959, 0.5879959, 0.5890132, 0.59003055, 0.59003055, 0.5910478, 0.5920651, 0.5920651, 0.5930824, 0.5940997, 
				0.5940997, 0.595117, 0.5961343, 0.5961343, 0.5971516, 0.59816885, 0.59816885, 0.5991862, 0.60020345, 0.60020345, 
				0.6012207, 0.60223806, 0.60223806, 0.60325533, 0.6042726, 0.6042726, 0.60528994, 0.6063072, 0.6063072, 0.6073245, 
				0.6083418, 0.6083418, 0.60935915, 0.61037636, 0.61037636, 0.6113937, 0.612411, 0.612411, 0.6134283, 0.61444557, 
				0.61444557, 0.6154629, 0.6164802, 0.6164802, 0.61749744, 0.6185148, 0.6185148, 0.61953205, 0.6205493, 0.6205493, 
				0.62156665, 0.6225839, 0.6225839, 0.6236012, 0.62461853, 0.62461853, 0.6256358, 0.6266531, 0.6266531, 0.6276704, 
				0.6286877, 0.6286877, 0.62970495, 0.6307223, 0.6307223, 0.6317396, 0.6327568, 0.6327568, 0.63377416, 0.6347915, 
				0.6347915, 0.6358087, 0.63682604, 0.63682604, 0.6378434, 0.63886064, 0.63886064, 0.6398779, 0.64089525, 0.64089525, 
				0.6419125, 0.6429298, 0.6429298, 0.6439471, 0.6449644, 0.6449644, 0.64598167, 0.646999, 0.646999, 0.6480163, 
				0.64903355, 0.64903355, 0.6500509, 0.65106815, 0.65106815, 0.6520854, 0.65310276, 0.65310276, 0.65412, 0.6551373, 
				0.6551373, 0.65615463, 0.65717196, 0.65717196, 0.6581892, 0.6592065, 0.6592065, 0.66022384, 0.66124105, 0.66124105, 
				0.6622584, 0.6632757, 0.6632757, 0.664293, 0.66531026, 0.66531026, 0.6663276, 0.66734487, 0.66734487, 0.66836214, 
				0.6693795, 0.6693795, 0.67039675, 0.671414, 0.671414, 0.67243135, 0.6734486, 0.6734486, 0.6744659, 0.6754832, 
				0.6754832, 0.6765005, 0.6775178, 0.6775178, 0.6785351, 0.6795524, 0.6795524, 0.68056965, 0.681587, 0.681587, 
				0.6826043, 0.6836215, 0.6836215, 0.68463886, 0.6856562, 0.6856562, 0.68667346, 0.68769073, 0.68769073, 0.68870807, 
				0.68972534, 0.68972534, 0.6907426, 0.69175994, 0.69175994, 0.6927772, 0.6937945, 0.6937945, 0.6948118, 0.6958291, 
				0.6958291, 0.69684637, 0.69684637, 0.6978637, 0.698881, 0.698881, 0.69989824, 0.7009156, 0.70193285, 0.70193285, 
				0.7029501, 0.70396745, 0.70396745, 0.7049848, 0.706002, 0.706002, 0.7070193, 0.70803666, 0.70803666, 0.7090539, 
				0.7100712, 0.71108854, 0.71108854, 0.7121058, 0.7131231, 0.7131231, 0.7141404, 0.7151577, 0.71617496, 0.71617496, 
				0.7171923, 0.71820956, 0.71922684, 0.71922684, 0.72024417, 0.72126144, 0.7222787, 0.7222787, 0.72329605, 0.7243133, 
				0.7253306, 0.7263479, 0.7263479, 0.7273652, 0.72838247, 0.7293998, 0.73041713, 0.73041713, 0.73143435, 0.7324517, 
				0.733469, 0.7344862, 0.73550355, 0.73550355, 0.7365209, 0.73753816, 0.73855543, 0.73957276, 0.74059004, 0.74059004, 
				0.7416073, 0.74262464, 0.7436419, 0.7446592, 0.7456765, 0.7466938, 0.74771106, 0.7487284, 0.7487284, 0.74974567, 
				0.75076294, 0.7517803, 0.75279754, 0.7538148, 0.75483215, 0.7558494, 0.75686675, 0.757884, 0.75890136, 0.75991863, 
				0.7609359, 0.76195323, 0.7629705, 0.7639878, 0.7650051, 0.7660224, 0.76703966, 0.768057, 0.76907426, 0.77009153, 
				0.77110887, 0.77212614, 0.7731434, 0.77416074, 0.775178, 0.7761953, 0.7772126, 0.7782299, 0.7792472, 0.7802645, 
				0.78128177, 0.7822991, 0.7843337, 0.785351, 0.78636825, 0.7873856, 0.78840286, 0.7894201, 0.79043746, 0.792472, 
				0.79348934, 0.7945066, 0.7955239, 0.7965412, 0.79857576, 0.7995931, 0.80061036, 0.80162764, 0.80264497, 0.8046796, 
				0.80569685, 0.8067142, 0.8087487, 0.80976605, 0.8107833, 0.81281793, 0.8138352, 0.8148525, 0.8158698, 0.81790435, 
				0.8189217, 0.82095623, 0.82197356, 0.82299083, 0.82502544, 0.8260427, 0.8280773, 0.8290946, 0.8311292, 0.8321465, 
				0.8341811, 0.8351984, 0.83723295, 0.8382503, 0.8402848, 0.84130216, 0.8433367, 0.84435403, 0.8463886, 0.8484232, 
				0.84944046, 0.85147506, 0.85350966, 0.85452694, 0.85656154, 0.85859615, 0.86063075, 0.8626653, 0.8636826, 0.8657172, 
				0.8677518, 0.8697864, 0.8718209, 0.87385553, 0.87589014, 0.87792474, 0.8799593, 0.8819939, 0.8840285, 0.8860631, 
				0.88809764, 0.8911495, 0.8931841, 0.89521873, 0.8982706, 0.9003052, 0.90233976, 0.90539163, 0.90742624, 0.9104781, 
				0.91353, 0.9155646, 0.9186165, 0.92166835, 0.9247202, 0.9277721, 0.93082404, 0.9338759, 0.93794507, 0.94099694, 
				0.9450661, 0.9491353, 0.95320445, 0.95727366, 0.96236014, 0.96744657, 0.9735504, 0.97965413, 0.9877925, 1.0];
		
	}
}